@page "/Inventory"
@using IMS.CoreBusiness
@rendermode InteractiveServer

<h1>Inventory</h1>

@inject IViewProductsByNameUseCase ViewProductsByNameUseCase
@inject IModalService ModalService
<div class="row mb-3">
    <div class="col-md-8">
        <input type="text" @bind="searchQuery" placeholder="Search for products..." class="form-control" />
    </div>
    <div class="col-md-4">
        
        <button @onclick="SearchProducts" class="btn btn-primary">Search</button>
        <button @onclick="(()=>ModalService.Show<Counter>("Fetch"))" class="btn btn-primary">Create</button>

    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Products)
                {
                    <tr>
                        <td>@product.ProductName</td>
                        <td>@product.Price</td>
                        <td>@product.Quantity</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private IEnumerable<Product> Products = new List<Product>();
    private string searchQuery = "";

    protected override async Task OnInitializedAsync()
    {
        Products = await ViewProductsByNameUseCase.ExecuteAsync("");
    }

    private async Task SearchProducts()
    {
        Products = await ViewProductsByNameUseCase.ExecuteAsync(searchQuery);
    }
}
