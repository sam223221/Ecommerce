@page "/"


@rendermode InteractiveServer
@inject IProductService ProductService


<div class="landing-page">
    <div>
         <div class="overlay-content">
        <div class="title">EXPLORE OUR</div>
        <div class="subtitle">BROAD SELECTION OF ELECTRONICS</div>
    </div>
        <div class="promotion-text">
            <b>-5% DISCOUNT</b> ON ALL ORDERS BEFORE 31.12.2024 <br />
            USE CODE <b>“NEW YEAR"</b>
        </div>
    </div>
</div>
<div class="landing-bg-container">
<div class="spacer"/>

<section class="products-bars">
    
    <!-- best seller -->
    <div class="products-block3">
        <div class="products-thumbnail3">
            <div class="thumbnail">OUR BESTSELLERS</div>
        </div>
            @foreach(var item in bestSeller)
            {
            <div class="item-container">
                <div class="item-image">
                        <img class="item-image" src="@item.ImageUrl" />
                </div>
                <div class="item-info">
                    <div class="item-name">
                        <a>@item.ProductName</a>
                    </div>
                    <div class="item-price">
                        @item.Price Dkk
                    </div>
                </div>
            </div>
            }
    </div>

</section>

 <div class="spacer"/>

<section class="products-bars">

    <div class="products-block">
        
        <div class="products-thumbnail">
            <div class="thumbnail">KEYBOARDS</div>
        </div>

            @foreach(var item in keyboards)
            { 
            <div class="item-container">
                <div class="item-image">
                    <img class="item-image" src="@item.ImageUrl" />
                </div>
                <div class="item-info">
                    <div class="item-name">
                        @item.ProductName
                    </div>
                    <div class="item-price">
                        @item.Price Dkk
                    </div>
                </div>
            </div>
            }

    </div>
</section>

 <div class="spacer"/>

<section class="products-bars">

    <div class="products-block2">
        <div class="products-thumbnail2">
            <div class="thumbnail">GAMING</div>
        </div>
            @foreach(var item in gaming)
            {
                <div class="item-container">
                    <div class="item-image">
                        <img class="item-image" src="@item.ImageUrl" />
                    </div>
                    <div class="item-info">
                        <div class="item-name">
                            @item.ProductName
                        </div>
                        <div class="item-price">
                            @item.Price Dkk
                        </div>
                    </div>
                </div>
            }
    </div>
</section>

 <div class="spacer"/>


<section class="ad-section">
    <div class="ad-photo">
        <img src="assets/landingpage-desk.png"/>
    </div>
    <div class="ad-text-rectangle">
        <div class="ad-text">
            With our broad selection of premium gaming accessories, you can build the ultimate setup for unmatched comfort and performance. 
            From high-quality headphones and responsive keyboards to precise mice and vibrant monitors, 
            we have everything you need to elevate your gaming experience. 
            Discover gear that brings out your best in every game!
        </div>
    </div>
</section>

 <div class="spacer"/>
 </div>

 @code 
{
    public IEnumerable<Product> Products = new List<Product>();
    public List<Product> bestSeller = new List<Product>();
    public List<Product> keyboards = new List<Product>();
    public List<Product> gaming = new List<Product>();


    protected override async Task OnInitializedAsync()
    {
        Products = await ProductService.GetAllProductsExecuteAsync();
        bestSeller = Products.Take(4).ToList();
        keyboards = Products.Where(p => p.ProductName.Contains("keyboard", StringComparison.OrdinalIgnoreCase)).Take(4).ToList();
        gaming = Products.Where(p => p.ProductName.Contains("gaming", StringComparison.OrdinalIgnoreCase)).Take(4).ToList();
    }
    
 }


